package cn.huanletao.controller;

import java.util.Arrays;
import java.util.List;

import org.bouncycastle.asn1.crmf.PKIPublicationInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import com.huanletao.common.pojo.Product;
import com.huanletao.common.pojo.YijiCatelog;
import com.huanletao.common.vo.EasyUIResult;
import com.huanletao.common.vo.SysResult;

import cn.huanletao.service.ProductService;



@RestController
@RequestMapping("product/manage")
public class ProductController {
@Autowired
private ProductService productService;

	/**
	 * 分页管理功能
	 * @param fCatelog 一级分类
	 * @param sCatelog 二级分类
	 * @param tCatelog 三级分类
	 * @param page     页码
	 * @param rows	   显示个数
	 * @return
	 */
	@RequestMapping("pageManage")
	public EasyUIResult queryPage(String cate,Integer page,Integer rows){
		System.out.println(cate);
		System.out.println(page);
		System.out.println(rows);
		EasyUIResult result= productService.queryPage(cate,page,rows);
		return result;
	}
	/**
	 * 商品单个查询
	 * @param productId 商品id
	 * @return
	 */
	
	@RequestMapping("item/{productId}")
	public Product queryProduct(@PathVariable String productId){
		return productService.queryProduct(productId);
	}


	/**
	 * 插入商品
	 * @param product 前端表单提交回来的数据
	 * @return
	 */
	
	@RequestMapping("insert")
	public SysResult insertProduct(Product product){
		try {
			productService.insertProduct(product);
			return SysResult.ok();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return SysResult.build(201, "新增商品失败", null);
		}
	}
	
	@RequestMapping("cate")
	public List<YijiCatelog> querycate(){
		return productService.queryCate();
	}
	/**
	 * 商品上架
	 * @param productId
	 */
	@RequestMapping("on")
	public SysResult onProduct(String productId){
		try {
			productService.onProduct(productId);
			return SysResult.ok();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return SysResult.build(202, "上架失败", null);
		}
		
	}
	/**
	 * 商品下架
	 * @param productId
	 */
	@RequestMapping("off")
	public SysResult offProduct(String productId){
		try {
			productService.offProduct(productId);
			return SysResult.ok();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return SysResult.build(203, "下架失败", null);
		}
	}
	
	/**
	 * 商品更新
	 * @param product
	 */
	@RequestMapping("renew")
	public SysResult renewProduct(Product product){
		try {
			productService.renewProduct(product);
			//200表示成功 status:200 msg ok data null
			return SysResult.ok();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return SysResult.build(204, e.getMessage(), null);
		}
	}
	/**
	 * 后台查询所有商品功能
	 * @param fCatelog 一级分类
	 * @param sCatelog 二级分类
	 * @param tCatelog 三级分类
	 * @param page     页码
	 * @param rows	   显示个数
	 * @return
	 */
	@RequestMapping("all")
	public EasyUIResult queryAllPage(String cate,Integer page,Integer rows){
		EasyUIResult result= productService.queryAllPage(cate,page,rows);
		return result;
	}
	/**
	 * 修改销量
	 * @param productId 商品Id
	 * @param num 卖出商品的数量
	 * @return
	 */
	@RequestMapping("updateSales")
	public SysResult updateSales(String productId,Integer num){
		try {
			productService.updateSales(productId,num);
			return SysResult.ok();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return SysResult.build(205, "购买失败,"+e.getMessage(), null);
		}
	}
	
	@RequestMapping("prank")
	public List<Product> showRank(Integer num){
		try {
			return productService.showRank(num);
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			return null;
		}
	}
	
	}
	

